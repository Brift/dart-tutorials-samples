import "dart:html" as BB;import "dart:async" as sB;import "dart:collection" as tB;import "dart:isolate" as VD;class HD{static const  ID="Chrome";final  AD;final  minimumVersion;const HD(this.AD,[this.minimumVersion]);}class JD{const JD();}class KD{final  name;const KD(this.name);}class LD{const LD();}class MD{const MD();}final cB=new m();var dB='00:00'; get uB{if(YC){ZC(cB,DB.gB,'counter');}return dB;}set uB( g){if(XC(cB)){aC(cB,DB.gB,'counter',dB,g);}dB=g;}var TB=new Stopwatch();var UB;var eB;var KB; JC(){eB=BB.query("#startbutton");UB=BB.query("#stopbutton");UB.disabled=true;KB=BB.query("#resetbutton");KB.disabled=true;} KC(){TB.start();var g=new Duration(seconds:1);new sB.Timer.periodic(g,NC);eB.disabled=true;UB.disabled=false;KB.disabled=true;} LC(){TB.stop();eB.disabled=false;KB.disabled=false;UB.disabled=true;} MC(){TB.reset();uB='00:00';KB.disabled=true;} NC( aD){var g=TB.elapsedMilliseconds~/1000;var h=0;if(g>=60){h=g~/60;g=g%60;}var i=(h<=9)?'0${h}':'${h}';var j=(g<=9)?'0${g}':'${g}';uB='${i}:${j}';} OC(){var bD=zC;var cD,dD,eD,fD;var gD=new RD(bD);cD=bD.nodes[3].nodes[1];var hD=gD.CD(()=>uB,false);cD.nodes.addAll([new BB.Text('\n      '),hD,new BB.Text('\n      ')]);dD=bD.nodes[3].nodes[3].nodes[1];gD.listen(dD.onClick,(g){KC();});eD=bD.nodes[3].nodes[3].nodes[3];gD.listen(eD.onClick,(g){LC();});fD=bD.nodes[3].nodes[3].nodes[5];gD.listen(fD.onClick,(g){MC();});gD.oB();gD.insert();}main(){AC=true;JC();OC();}var vB=false;var PC=l.wB;class EB{final  name; get FC=>(parent==null||parent.name=='')?name:'${parent.FC}.${name}';final  parent;var iD;var children;var jD;var kD;factory EB( g){if(g.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}if(LB==null)LB=<String,EB>{};if(LB.containsKey(g))return LB[g];var h=g.lastIndexOf('.');var i=null;var j;if(h==-1){if(g!='')i=new EB('');j=g;}else{i=new EB(g.substring(0,h));j=g.substring(h+1);}final k=new EB.WD(j,i);LB[g]=k;return k;}EB.WD(this.name,this.parent):children=new Map<String,EB>(){if(parent!=null)parent.children[name]=this;} get aB{if(vB){if(iD!=null)return iD;if(parent!=null)return parent.aB;}return PC;} DD( g)=>(g>=aB); log( h, j,[k]){if(DD(h)){var i=new fB(h,j,FC,k);if(vB){var g=this;while (g!=null){g.lD(i);g=g.parent;}}else{QC.lD(i);}}} info( g,[h])=>log(l.wB,g,h); pB( g,[h])=>log(l.RC,g,h); lD( g){if(jD!=null){jD.add(g);}}static  get QC=>new EB('');static var LB;}class l implements Comparable<l>{final  name;final  value;const l(this.name,this.value);static const  wB=const l('INFO',800);static const  RC=const l('WARNING',900); operator==( g)=>g!=null&&value==g.value; operator<( g)=>value<g.value; operator<=( g)=>value<=g.value; operator>( g)=>value>g.value; operator>=( g)=>value>=g.value; compareTo( g)=>value-g.value; get hashCode=>value; toString()=>name;}class fB{final  aB;final  message;final  ED;final  time;final  GD;static var SC=0;var exception;fB(this.aB,this.message,this.ED,[this.exception]):time=new DateTime.now(),GD=fB.SC++ ;}typedef  v( e);typedef  TC( changes);typedef  CB();typedef  UC();class VB{final oldValue;final newValue;final  changes;VB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is VB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>kC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class DB{static const gB=1;static const hB=2;static const xB=hB|4;static const yB=hB|8;final  type;final key;final oldValue;final newValue;DB(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is DB&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>lC(type,key,oldValue,newValue); toString(){var g;switch (type){case gB:g='field';break;case hB:g='index';break;case xB:g='insert';break;case yB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} VC(g, i,[ k]){if(g is m){var h=g;return iB(h,(q){i(new VB(h,h,q));});}var j=new WB(g,i,k);if(!j.mD()){return bC;}return j.nD;} iB( g, h){if(g.JB==null)g.JB=new jB();var i=g.JB.add(h);return i.remove;}class m{var JB;var IB;final  hashCode= ++m.WC;static var WC=0;} XC( g)=>g.JB!=null&&g.JB.head!=null; get YC=>HB!=null; ZC( g, h,i)=>HB.oD(g,h,i); aC( g, h,k, i, j){if((h&(DB.xB|DB.yB))==0){if(i==j)return;}if(FB==null){FB=[] ;mC(cC);}if(g.IB==null){g.IB=[] ;FB.add(g);}g.IB.add(new DB(h,k,i,j));} bC(){}var HB;var zB=100;var FB;var GB; cC(){var q=0;while (FB!=null||GB!=null){var i=FB;FB=null;var j=GB;GB=null;if(q++ ==zB){dC(i,j);return;}if(i!=null){for(var g in i){var AB=g.IB;g.IB=null;for(var h=g.JB.head;h!=null;h=h.next){var k=h.value;try {k(AB);}catch (SB,qB){MB(SB,qB,k,'from ${g}');}}}}if(j!=null){j.forEach((IC,rB){rB.pD();});}}} dC( h, i){var g=[] ;if(h!=null){for(var j in h){var AB=j.IB;g.add('${j} ${AB}');}}if(i!=null){for(var k in i.values){var q=k.pD();if(q!=null)g.add('${k} ${q}');}}FB=null;GB=null;var SB='exceeded notifiction limit of ${zB}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';gC(SB);}class WB{static var eC=0;final  qD= ++WB.eC;final  rD;final  sD;final  tD;final  uD=new Map();final  vD=[] ;var wD=false;var xD;WB(this.rD,this.sD,this.tD); toString()=>tD!=null?'<observer ${qD}: ${tD}>':'<observer ${qD}>'; mD(){var g=HB;HB=this;try {xD=rD();if(xD is Iterable&&xD is !List&&xD is !m){xD=(xD as Iterable).toList();}}catch (h,i){MB(h,i,rD,'from ${this}');xD=null;}uD.forEach(yD);uD.clear();assert(HB==this);HB=g;zD();return vD.length>0;} AE( g){try {sD(g);}catch (h,i){MB(h,i,sD,'from ${this}');}} zD(){var g=xD;if(g is !m)return;vD.add(iB(g,(h){AE(new VB(g,g,h));}));} oD( j, k,g){var i=uD.putIfAbsent(j,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|k;}catch (q,AB){MB(q,AB,g,'hashCode or operator == from ${this}');}} yD( i, j){vD.add(iB(i,(k){if(wD)return;for(var g in k){var h=j[g.key];if(h!=null&&(h&g.type)!=0){wD=true;if(GB==null){GB=new tB.SplayTreeMap();}GB[qD]=this;return;}}}));} nD(){for(var g in vD){g();}wD=false;} pD(){if(!wD)return null;var g=xD;nD();mD();try {if(g==xD)return null;}catch (i,j){MB(i,j,g,'operator == from ${this}');return null;}var h=new VB(g,xD);AE(h);return h;}}typedef  fC( message);var gC=(g)=>print(g);typedef  hC(error,stackTrace,obj, message);var MB=iC; iC(g,h,i, j){print('web_ui.observe: unhandled error calling ${i} ${j}.\n' 'error:\n${g}\n\nstack trace:\n${h}');}class jC{}class t<u>{var BE;var CE;var DE;var EE;t.XD( g,this.DE):EE=g{if(DE!=null)DE.FE++ ;} get next=>CE; get value=>EE;set value( g)=>EE=g; GE( g, h){CE=h;BE=g;if(g!=null)g.CE=this;if(h!=null)h.BE=this;return this;} append( g)=>new t<u>.XD(g,DE).GE(this,CE); remove(){if(DE==null)return;DE.FE-- ;if(BE!=null){BE.CE=CE;}else{DE.HE=CE;}if(CE!=null){CE.BE=BE;}else{DE.IE=BE;}CE=null;BE=null;DE=null;}}class jB<u> extends tB.IterableBase<u>{var HE;var IE; get length=>FE;var FE=0;jB(){} get head=>HE; add( h){var g=new t<u>.XD(h,this);if(IE==null)return HE=IE=g;return IE=g.GE(IE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new ND<u>(this);}class ND<u> implements Iterator<u>{var JE;var DE;var KE;var LE=-1;ND(this.DE){JE=new List<t>(DE.length);var h=0;var g=DE.head;while (g!=null){JE[h++ ]=g;g=g.next;}} get current=>KE; moveNext(){do{LE++ ;}while(LE<JE.length&&JE[LE].DE!=DE);if(LE<JE.length){KE=JE[LE].value;return true;}else{KE=null;return false;}}}NB(g,h)=>g.hashCode*31+h.hashCode;kC(g,h,i)=>NB(NB(g,h),i);lC(g,h,i,j)=>NB(NB(g,h),NB(i,j)); mC( h()){var g=new VD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}var nC=new OD();class OD implements BB.NodeTreeSanitizer{ sanitizeTree( g){}} oC(h, g,[ i]){if(h is BB.Node){g.replaceWith(h);return h;}var j=h is jC;if(i==null){i=h.toString();}if(!j&&g is BB.Text){g.text=i;}else{var k=g;g=!j?new BB.Text(i):new BB.Element.html(i,treeSanitizer:nC);k.replaceWith(g);}return g;}abstract class XB{ oB(){} insert(); remove();}class PD extends XB{final  EC;var ME;final  listener;PD(this.EC,this.listener); insert(){ME=EC.listen(listener);} remove(){ME.cancel();ME=null;}}abstract class pC extends XB{final exp;final  isFinal;final  DC;var bB;pC(this.exp,this.isFinal):DC=kB&&YB!=null?YB():null; insert(){if(isFinal){GC();}else if(bB!=null){throw new StateError('binding already attached');}else{bB=HC();}} remove(){if(!isFinal){bB();bB=null;}} GC(); HC();}class QD extends pC{final  action;QD(g,this.action, h):super(g,h); GC()=>action(new VB(null,exp())); HC()=>sC(exp,action,'generic-binding',DC);}class RD extends XB{final  FD;final  children=[] ;final  nodes=[] ;RD(this.FD); listen( g, h){children.add(new PD(g,(i){h(i);uC();}));} CD( h,i){var g=new BB.Text('');children.add(new QD(()=>'${h()}',(j){g=oC(h(),g,j.newValue);},i));return g;} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); oB(){for(var g=0,h=children.length;g<h;g++ ){children[g].oB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var AC=false;var kB=false;var YB=(){try {throw "";}catch (h,g){return g.toString();}};final  OB=new EB('watcher'); qC(g, q,[ j, AB]){if(AC)return VC(g,q);if(q==null)return (){};if(PB==null)PB=new jB<QB>();j=j==null?'<unnamed>':j;var i;var h=o.yC;if(g is CC){i=(g as CC).NE;}else if(g is Function){i=g;try {var k=g();if(k is List){h=o.RB;}else if(k is Iterable){h=o.RB;i=()=>g().toList();}else if((k is tB.LinkedHashMap)||(k is tB.SplayTreeMap)){h=o.nB;}else if(k is Map){h=o.mB;}}catch (SB,qB){OB.pB('evaluating ${j} watcher threw error (${SB}, ${qB})');}}else if(g is List){i=()=>g;h=o.RB;}else if(g is Iterable){i=()=>g.toList();h=o.RB;}else if((g is tB.LinkedHashMap)||(g is tB.SplayTreeMap)){i=()=>g;h=o.nB;}else if(g is Map){i=()=>g;h=o.mB;}if(kB&&AB==null&&YB!=null){AB=YB();}var rB=rC(h,i,q,j,AB);var IC=PB.add(rB);return IC.remove;} rC( k, g, h, i, j){switch (k){case o.RB:return new SD(g,h,i,j);case o.nB:return new UD(g,h,i,j);case o.mB:return new TD(g,h,i,j);default:return new QB(g,h,i,j);}} sC(h, i,[ j, k]){var q=qC(h,i,j,k);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new VB(null,g));return q;}var PB;class QB{final  debugName;var location;final  OE;static var tC=0;final  NE;final  PE;var QE;QB(this.NE,this.PE,this.debugName,this.location):OE=tC++ {QE=NE();} toString()=>'${debugName} (id: #${OE})'; BD(){var g=RE();if(SE(g)){var h=QE;TE(g);PE(new VB(h,g));return true;}return false;} SE(g)=>QE!=g; TE(g){if(kB){if(location!=null){OB.info('watcher updated: ${this}, defined at:\n${location}');location=null;}else{OB.info('watcher updated: ${this}');}}QE=g;}RE(){try {return NE();}catch (g,h){OB.pB('${this} watcher threw an exception: ${g}, ${h}');}return QE;}}final  BC=10; uC(){if(PB==null)return;var g;var h=0;do{g=false;for(var i in PB){if(i.BD()){g=true;}}}while(g&& ++h<BC);if(h==BC){OB.pB('Possible loop in watchers propagation, stopped dispatch.');}}typedef  vC<wC>();class CC<wC>{}class SD<wC> extends QB{SD(g, h, i, j):super(g,h,i,j){TE(RE());} SE( g){return lB(QE,g);} TE(g){QE=new List<wC>.from(g);}}class TD<ZB,xC> extends QB{TD(g, h, i, j):super(g,h,i,j){TE(RE());} SE( g){var i=QE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(QE[h]!=g[h])return true;}return false;} TE(g){QE=new Map<ZB,xC>.from(g);}}class UD<ZB,xC> extends QB{UD(g, h, i, j):super(g,h,i,j){TE(RE());} SE( g){return lB(g.keys,QE.keys)||lB(g.values,QE.values);} TE(g){QE=new tB.LinkedHashMap.from(g);}} lB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class o{final UE;const o.YD(this.UE);toString()=>'Enum.${UE}';static const RB=const o.YD('LIST');static const mB=const o.YD('HASH_MAP');static const nB=const o.YD('ORDERED_MAP');static const yC=const o.YD('OTHER');}var zC=BB.document.body;
//# sourceMappingURL=stopwatch.html_bootstrap.dart.map
//@ sourceMappingURL=stopwatch.html_bootstrap.dart.map
