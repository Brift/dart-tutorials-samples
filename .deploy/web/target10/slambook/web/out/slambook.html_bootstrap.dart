import "dart:html" as o;import "dart:async" as eB;import "dart:collection" as vB;import "dart:json" as tD;import "dart:isolate" as RE;class uD{static const  vD="Chrome";static const  wD="Firefox";static const  xD="Internet Explorer";static const  yD="Safari";final  eD;final  minimumVersion;const uD(this.eD,[this.minimumVersion]);}class zD{const zD();}class AE{final  name;const AE(this.name);}class BE{const BE();}class CE{const CE();} eC(){} fC(){var YE=bD;var ZE;var aE=new OD(YE);ZE=YE.nodes[3].nodes[1];aE.bB(new DE()..host=ZE);aE.oB();aE.insert();}main(){OC=true;eC();fC();}class DE extends SC with BB{var bE;static final gC=new o.DocumentFragment.html('''
      <div class="entry">
        <label>First name?</label>
        <input type="text">
      </div>
      <div class="entry">
        <label>Favorite quote?</label>
        <textarea></textarea>
      </div> 
      <div class="entry">
        <label>Favorite color?</label>
        <input type="color">
      </div>
      <div class="entry">
        <label>Birthday?</label>
        <input type="date">
      </div>
      <div class="entry">
        <label>Favorite volume?</label>
        <input type="range" min="0" max="11">  
      </div>
      <div class="entry">
        <label>Cat or dog?</label>
        <input name="catOrDog" type="radio" value="cat">Cat
        <input name="catOrDog" type="radio" value="dog">Dog
        <input name="catOrDog" type="radio" value="iguana">Iguana
      </div>
      <div>
        <label>Favorite type of music?</label>
        <select>
          <option>Classical</option>
          <option>Country</option>
          <option>Rock</option>
          <option>Silence</option>
        </select>
      </div>
      <div class="entry">
        <label for="zombies">Check for zombies. </label>
        <input type="checkbox" id="zombies">
      </div>
      <div class="entry">
        <label>Favorite things?</label>
        <input type="checkbox" id="kittens">
          <label for="kittens" class="andrews">Kittens</label>
        <input type="checkbox" id="raindrops">
          <label for="raindrops" class="andrews">Raindrops</label>
        <input type="checkbox" id="mittens">
          <label for="mittens" class="andrews">Mittens</label>
        <input type="checkbox" id="kettles">
          <label for="kettles" class="andrews">Kettles</label>
      </div>

      <div class="submitarea">
        <input type="submit" value="Submit">
        <input type="reset" value="Clear"> <br>    
        <textarea disabled="" class="responsetext"></textarea>
      </div>
      
      <script type="application/dart" src="xslambookform.dart">
      </script>
    ''',treeSanitizer:JD);var cE,dE,eE,fE,gE,hE,iE,jE,kE,lE,mE,nE,oE,pE;var qE;var rE;var sE,tE; hD(){var uE=createShadowRoot("x-slambook-form");qD("x-slambook-form",new FC({"x-slambook-form":"[is=\"x-slambook-form\"]"}));bE=iD("x-slambook-form");rE=new OD(uE);uE.nodes.add(gC.clone(true));cE=uE.nodes[1].nodes[3];rE.listen(cE.onInput,(h){m['firstName']=cE.value;});rE.FB(()=>m['firstName'],(g){if(cE.value!=g)cE.value=g;},false,false);tE=uE.nodes[3].nodes[3];rE.listen(tE.onInput,(h){m['favoriteQuote']=tE.value;});rE.FB(()=>m['favoriteQuote'],(g){if(tE.value!=g)tE.value=g;},false,false);kE=uE.nodes[5].nodes[3];rE.listen(kE.onInput,(h){m['favoriteColor']=kE.value;});rE.FB(()=>m['favoriteColor'],(g){if(kE.value!=g)kE.value=g;},false,false);lE=uE.nodes[7].nodes[3];rE.listen(lE.onInput,(h){m['birthday']=lE.value;});rE.FB(()=>m['birthday'],(g){if(lE.value!=g)lE.value=g;},false,false);mE=uE.nodes[9].nodes[3];rE.listen(mE.onInput,(h){m['volume']=mE.value;});rE.FB(()=>m['volume'],(g){if(mE.value!=g)mE.value=g;},false,false);nE=uE.nodes[11].nodes[3];rE.listen(nE.onChange,(h){m['catOrDog']='cat';});rE.FB(()=>m['catOrDog']=='cat',(g){if(nE.checked!=g)nE.checked=g;},false,false);oE=uE.nodes[11].nodes[5];rE.listen(oE.onChange,(h){m['catOrDog']='dog';});rE.FB(()=>m['catOrDog']=='dog',(g){if(oE.checked!=g)oE.checked=g;},false,false);pE=uE.nodes[11].nodes[7];rE.listen(pE.onChange,(h){m['catOrDog']='iguana';});rE.FB(()=>m['catOrDog']=='iguana',(g){if(pE.checked!=g)pE.checked=g;},false,false);qE=uE.nodes[13].nodes[3];rE.listen(qE.onChange,(h){m['music']=qE.selectedIndex;});rE.FB(()=>m['music'],(g){if(qE.selectedIndex!=g)qE.selectedIndex=g;},false,false);dE=uE.nodes[15].nodes[3];rE.listen(dE.onChange,(h){m['zombies']=dE.checked;});rE.FB(()=>m['zombies'],(g){if(dE.checked!=g)dE.checked=g;},false,false);eE=uE.nodes[17].nodes[3];rE.listen(eE.onChange,(h){KB['kittens']=eE.checked;});rE.FB(()=>KB['kittens'],(g){if(eE.checked!=g)eE.checked=g;},false,false);fE=uE.nodes[17].nodes[7];rE.listen(fE.onChange,(h){KB['raindrops']=fE.checked;});rE.FB(()=>KB['raindrops'],(g){if(fE.checked!=g)fE.checked=g;},false,false);gE=uE.nodes[17].nodes[11];rE.listen(gE.onChange,(h){KB['mittens']=gE.checked;});rE.FB(()=>KB['mittens'],(g){if(gE.checked!=g)gE.checked=g;},false,false);hE=uE.nodes[17].nodes[15];rE.listen(hE.onChange,(h){KB['kettles']=hE.checked;});rE.FB(()=>KB['kettles'],(g){if(hE.checked!=g)hE.checked=g;},false,false);iE=uE.nodes[19].nodes[1];rE.listen(iE.onClick,(h){sD(h);});jE=uE.nodes[19].nodes[3];rE.listen(jE.onClick,(h){oD(h);});sE=uE.nodes[19].nodes[7];rE.listen(sE.onInput,(h){cB=sE.value;});rE.FB(()=>cB,(g){if(sE.value!=g)sE.value=g;},false,false);rE.oB();} jD(){rE.insert();} nD(){rE.remove();rE=cE=tE=kE=lE=mE=nE=oE=pE=qE=dE=eE=fE=gE=hE=iE=jE=sE=null;}var vE=KC({'kittens':true,'raindrops':false,'mittens':true,'kettles':false}); get KB{if(v){EB(this,k.u,'favoriteThings');}return vE;}var xE=KC({'firstName':'mem','favoriteQuote':'Enjoy all your meals.','favoriteColor':'#4169E1','birthday':'1963-08-30','volume':'11','catOrDog':'dog','music':2,'zombies':true}); get m{if(v){EB(this,k.u,'theData');}return xE;}var yE=''; get cB{if(v){EB(this,k.u,'serverResponse');}return yE;}set cB( g){if(NB(this)){q(this,k.u,'serverResponse',yE,g);}yE=g;}var request; sD( g){g.preventDefault();request=new o.HttpRequest();request.onReadyStateChange.listen(onData);var h='http://127.0.0.1:4040';request.open('POST',h);request.send(rD());} onData(zE){if(request.readyState==o.HttpRequest.DONE&&request.status==200){cB='Server Sez: '+request.responseText;}else if(request.readyState==o.HttpRequest.DONE&&request.status==0){cB='No server';}} oD( g){g.preventDefault();KB['kittens']=false;KB['raindrops']=false;KB['mittens']=false;KB['kettles']=false;m['firstName']='';m['favoriteQuote']='';m['favoriteColor']='#FFFFFF';m['birthday']='2013-01-01';m['volume']='0';m['catOrDog']='cat';m['music']=0;m['zombies']=false;cB='Data cleared.';} rD(){m['favoriteThings']=KB;return tD.stringify(m);}}class hC implements o.Element{var AF;var BF;var CF={}; get host{if(AF==null)throw new StateError('host element has not been set.');return AF;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}var h=g.xtag;if(h!=null&&h!=g){throw new ArgumentError('host must not have its xtag property set.');}if(AF!=null){throw new StateError('host can only be set once.');}g.xtag=this;AF=g;}createShadowRoot([ g]){var h=host.createShadowRoot();if(g!=null){CF[g]=h;}return h;} created(){} XC(){} bC(){}get isTemplate=>host.isTemplate;get content=>host.content; getAttribute( g)=>host.getAttribute(g); setAttribute( g, h)=>host.setAttribute(g,h); get childNodes=>host.childNodes; get nodes=>host.nodes; replaceWith( g){host.replaceWith(g);} remove()=>host.remove(); get document=>host.document; get previousNode=>host.previousNode;set text( g){host.text=g;} contains( g)=>host.contains(g); insertBefore( g, h)=>host.insertBefore(g,h); insertAllBefore( g, h)=>host.insertAllBefore(g,h); get attributes=>host.attributes; get children=>host.children; clone( g)=>host.clone(g); get parent=>host.parent; get parentNode=>host.parentNode; get nodeValue=>host.nodeValue; get id=>host.id;set id( g){host.id=g;} createFragment( g,{ validator, treeSanitizer})=>host.createFragment(g,validator:validator,treeSanitizer:treeSanitizer); get tagName=>host.tagName; matches( g)=>host.matches(g); matchesWithAncestors( g)=>host.matchesWithAncestors(g); query( g)=>host.query(g); queryAll( g)=>host.queryAll(g); get firstChild=>host.firstChild; get lastChild=>host.lastChild; get localName=>host.localName; get nodeType=>host.nodeType; cD( g, h,[ i]){host.cD(g,h,i);} dD( g, h,[ i]){host.dD(g,h,i);}get xtag=>host.xtag;set xtag(g){host.xtag=g;} append( g)=>host.append(g); get onChange=>host.onChange; get onClick=>host.onClick; get onInput=>host.onInput;}var IC=false;var iC=AB.JC;class TB{final  name; get WC=>(parent==null||parent.name=='')?name:'${parent.WC}.${name}';final  parent;var DF;var children;var EF;var FF;factory TB( g){if(g.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}if(fB==null)fB=<String,TB>{};if(fB.containsKey(g))return fB[g];var h=g.lastIndexOf('.');var i=null;var j;if(h==-1){if(g!='')i=new TB('');j=g;}else{i=new TB(g.substring(0,h));j=g.substring(h+1);}final l=new TB.SE(j,i);fB[g]=l;return l;}TB.SE(this.name,this.parent):children=new Map<String,TB>(){if(parent!=null)parent.children[name]=this;} get tB{if(IC){if(DF!=null)return DF;if(parent!=null)return parent.tB;}return iC;} kD( g)=>(g>=tB); log( h, j,[l]){if(kD(h)){var i=new wB(h,j,WC,l);if(IC){var g=this;while (g!=null){g.GF(i);g=g.parent;}}else{jC.GF(i);}}} info( g,[h])=>log(AB.JC,g,h); GC( g,[h])=>log(AB.kC,g,h); GF( g){if(EF!=null){EF.add(g);}}static  get jC=>new TB('');static var fB;}class AB implements Comparable<AB>{final  name;final  value;const AB(this.name,this.value);static const  JC=const AB('INFO',800);static const  kC=const AB('WARNING',900); operator==( g)=>g!=null&&value==g.value; operator<( g)=>value<g.value; operator<=( g)=>value<=g.value; operator>( g)=>value>g.value; operator>=( g)=>value>=g.value; compareTo( g)=>value-g.value; get hashCode=>value; toString()=>name;}class wB{final  tB;final  message;final  lD;final  time;final  pD;static var lC=0;var exception;wB(this.tB,this.message,this.lD,[this.exception]):time=new DateTime.now(),pD=wB.lC++ ;}const EE=const FE();class FE{const FE();}class mC<PB> extends ID with BB implements List<PB>{final  HF;mC([ g]):HF=g!=null?new List<PB>(g):<PB>[] ;factory mC.TE( g)=>new mC<PB>()..addAll(g); get length{if(v)EB(this,k.u,'length');return HF.length;}set length( h){var i=HF.length;if(i==h)return;if(NB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){q(this,k.RB,g,HF[g],null);}q(this,k.u,'length',i,h);}else{q(this,k.u,'length',i,h);for(int g=i;g<h;g++ ){q(this,k.UB,g,null,null);}}}HF.length=h;} operator[]( g){if(v)EB(this,k.LB,g);return HF[g];}operator[]=( g, h){var i=HF[g];if(NB(this)){q(this,k.LB,g,i,h);}HF[g]=h;} sublist( g,[ h])=>new mC<PB>.TE(super.sublist(g,h)); add( h){var g=HF.length;if(NB(this)){q(this,k.u,'length',g,g+1);q(this,k.UB,g,null,h);}HF.add(h);} removeRange( h, g){if(g==0)return;NC.GD(this,h,g);if(NB(this)){for(int i=h;i<g;i++ ){q(this,k.RB,i,this[i],null);}}NC.FD(this,h+g,this,h,this.length-g-h);this.length=this.length-g;} expand( g(E)){throw new UnimplementedError();return null;} toString(){if(v){for(int g=0;g<length;g++ ){EB(this,k.LB,g);}}return HF.toString();}}typedef  gB<GB,DB>();class XB<GB,DB> extends BB implements Map<GB,DB>{final  IF;var JF;var KF;XB({ createMap}):IF=createMap!=null?createMap():new Map<GB,DB>(){JF=new nC<GB,DB>(this);KF=new oC<GB,DB>(this);}factory XB.UE( h,{ createMap}){var g=new XB(createMap:createMap);h.forEach((i,j){g[i]=j;});return g;} get keys=>JF; get values=>KF; get length{if(v)EB(this,k.u,'length');return IF.length;} get isEmpty=>length==0; get isNotEmpty=>length!=0; LF( g)=>EB(this,k.LB,g); MF(){EB(this,k.u,'length');IF.keys.forEach(LF);} containsKey( g){if(v)LF(g);return IF.containsKey(g);} operator[]( g){if(v)LF(g);return IF[g];} operator[]=( g, h){var j=IF.length;var i=IF[g];IF[g]=h;if(NB(this)){if(j!=IF.length){q(this,k.u,'length',j,IF.length);q(this,k.UB,g,i,h);}else if(i!=h){q(this,k.LB,g,i,h);}}} putIfAbsent( g, j()){if(v)LF(g);var h=IF.length;var i=IF.putIfAbsent(g,j);if(NB(this)&&h!=IF.length){q(this,k.u,'length',h,IF.length);q(this,k.UB,g,null,i);}return i;} remove( g){if(v)LF(g);var h=IF.length;var i=IF.remove(g);if(NB(this)&&h!=IF.length){q(this,k.RB,g,i,null);q(this,k.u,'length',h,IF.length);}return i;} addAll( g)=>g.forEach((h,i){this[h]=i;}); clear(){var g=IF.length;if(NB(this)&&g>0){IF.forEach((h,i){q(this,k.RB,h,i,null);});q(this,k.u,'length',g,0);}IF.clear();} forEach( g( key, value)){if(v)MF();IF.forEach(g);} toString()=>vB.Maps.mapToString(this);}class nC<GB,DB> extends vB.IterableBase<GB>{final  IF;nC(this.IF); get iterator=>new GE<GB,DB>(IF);}class GE<GB,DB> implements Iterator<GB>{final  IF;final  JF;var NF=false;GE( g):IF=g,JF=g.IF.keys.iterator; moveNext(){if(v)EB(IF,k.u,'length');return NF=JF.moveNext();} get current{var g=JF.current;if(v&&NF)IF.LF(g);return g;}}class oC<GB,DB> extends vB.IterableBase<DB>{final  IF;oC(this.IF); get iterator=>new HE<GB,DB>(IF);}class HE<GB,DB> implements Iterator<DB>{final  IF;final  JF;final  KF;var NF;HE( g):IF=g,JF=g.IF.keys.iterator,KF=g.IF.values.iterator; moveNext(){if(v)EB(IF,k.u,'length');var h=JF.moveNext();var g=KF.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return NF=g;} get current{if(v&&NF)IF.LF(JF.current);return KF.current;}}typedef  OB( e);typedef  pC( changes);typedef  QB();typedef  qC();class pB{final oldValue;final newValue;final  changes;pB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is pB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>CD(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const u=1;static const LB=2;static const UB=LB|4;static const RB=LB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>DD(type,key,oldValue,newValue); toString(){var g;switch (type){case u:g='field';break;case LB:g='index';break;case UB:g='insert';break;case RB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} rC(g, i,[ l]){if(g is BB){var h=g;return xB(h,(t){i(new pB(h,h,t));});}var j=new qB(g,i,l);if(!j.OF()){return tC;}return j.PF;} xB( g, h){if(g.aB==null)g.aB=new yB();var i=g.aB.add(h);return i.remove;}KC(g){if(g is Map){var h=null;if(g is vB.SplayTreeMap){h=()=>new vB.SplayTreeMap();}else if(g is vB.LinkedHashMap){h=()=>new vB.LinkedHashMap();}return new XB.UE(g,createMap:h);}if(g is Set)return new MC.VE(g);if(g is Iterable)return new mC.TE(g);return g;}class BB{var aB;var ZB;final  hashCode= ++BB.sC;static var sC=0;} NB( g)=>g.aB!=null&&g.aB.head!=null; get v=>YB!=null; EB( g, h,i)=>YB.QF(g,h,i); q( g, h,l, i, j){if((h&(k.UB|k.RB))==0){if(i==j)return;}if(VB==null){VB=[] ;ED(uC);}if(g.ZB==null){g.ZB=[] ;VB.add(g);}g.ZB.add(new k(h,l,i,j));} tC(){}var YB;var LC=100;var VB;var WB; uC(){var t=0;while (VB!=null||WB!=null){var i=VB;VB=null;var j=WB;WB=null;if(t++ ==LC){vC(i,j);return;}if(i!=null){for(var g in i){var CB=g.ZB;g.ZB=null;for(var h=g.aB.head;h!=null;h=h.next){var l=h.value;try {l(CB);}catch (SB,dB){hB(SB,dB,l,'from ${g}');}}}}if(j!=null){j.forEach((dC,HC){HC.RF();});}}} vC( h, i){var g=[] ;if(h!=null){for(var j in h){var CB=j.ZB;g.add('${j} ${CB}');}}if(i!=null){for(var l in i.values){var t=l.RF();if(t!=null)g.add('${l} ${t}');}}VB=null;WB=null;var SB='exceeded notifiction limit of ${LC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';yC(SB);}class qB{static var wC=0;final  SF= ++qB.wC;final  TF;final  UF;final  VF;final  WF=new Map();final  XF=[] ;var YF=false;var ZF;qB(this.TF,this.UF,this.VF); toString()=>VF!=null?'<observer ${SF}: ${VF}>':'<observer ${SF}>'; OF(){var g=YB;YB=this;try {ZF=TF();if(ZF is Iterable&&ZF is !List&&ZF is !BB){ZF=(ZF as Iterable).toList();}}catch (h,i){hB(h,i,TF,'from ${this}');ZF=null;}WF.forEach(aF);WF.clear();assert(YB==this);YB=g;bF();return XF.length>0;} cF( g){try {UF(g);}catch (h,i){hB(h,i,UF,'from ${this}');}} bF(){var g=ZF;if(g is !BB)return;XF.add(xB(g,(h){cF(new pB(g,g,h));}));} QF( j, l,g){var i=WF.putIfAbsent(j,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|l;}catch (t,CB){hB(t,CB,g,'hashCode or operator == from ${this}');}} aF( i, j){XF.add(xB(i,(l){if(YF)return;for(var g in l){var h=j[g.key];if(h!=null&&(h&g.type)!=0){YF=true;if(WB==null){WB=new vB.SplayTreeMap();}WB[SF]=this;return;}}}));} PF(){for(var g in XF){g();}YF=false;} RF(){if(!YF)return null;var g=ZF;PF();OF();try {if(g==ZF)return null;}catch (i,j){hB(i,j,g,'operator == from ${this}');return null;}var h=new pB(g,ZF);cF(h);return h;}}typedef  xC( message);var yC=(g)=>print(g);typedef  zC(error,stackTrace,obj, message);var hB=AD; AD(g,h,i, j){print('web_ui.observe: unhandled error calling ${i} ${j}.\n' 'error:\n${g}\n\nstack trace:\n${h}');}class MC<MB> extends HD with BB implements Set<MB>{final  dF;final  eF;MC({ createMap}):dF=createMap!=null?createMap():new Map<MB,Object>(),eF=createMap;factory MC.VE( g,{ createMap}){return new MC<MB>(createMap:createMap)..addAll(g);} contains( g){if(v)EB(this,k.LB,g);return dF.containsKey(g);} add( g){var h=dF.length;dF[g]=const Object();if(h!=dF.length){q(this,k.u,'length',h,dF.length);q(this,k.UB,g,null,g);}} remove( g){if(v)EB(this,k.LB,g);var h=dF.length;dF.remove(g);if(h!=dF.length){if(NB(this)){q(this,k.RB,g,g,null);q(this,k.u,'length',h,dF.length);}return true;}return false;} clear(){if(NB(this)){for(var g in dF.keys){q(this,k.RB,g,g,null);}q(this,k.u,'length',dF.length,0);}dF.clear();} get length{if(v)EB(this,k.u,'length');return dF.length;} get isEmpty=>length==0; get iterator=>new IE<MB>(this); addAll( g)=>g.forEach(add); toString(){if(v){for(MB g in dF.keys){EB(this,k.LB,g);}}return dF.keys.toSet().toString();}}class IE<MB> implements Iterator<MB>{final  fF;final  gF;var hF=false;IE( g):fF=g,gF=g.dF.keys.iterator; moveNext(){fF.length;return hF=gF.moveNext();} get current{var g=gF.current;if(v&&hF)EB(fF,k.LB,g);return g;}}class BD{}class IB<JB>{var iF;var jF;var kF;var lF;IB.WE( g,this.kF):lF=g{if(kF!=null)kF.mF++ ;} get next=>jF; get value=>lF;set value( g)=>lF=g; nF( g, h){jF=h;iF=g;if(g!=null)g.jF=this;if(h!=null)h.iF=this;return this;} append( g)=>new IB<JB>.WE(g,kF).nF(this,jF); remove(){if(kF==null)return;kF.mF-- ;if(iF!=null){iF.jF=jF;}else{kF.oF=jF;}if(jF!=null){jF.iF=iF;}else{kF.pF=iF;}jF=null;iF=null;kF=null;}}class yB<JB> extends vB.IterableBase<JB>{var oF;var pF; get length=>mF;var mF=0;yB(){} get head=>oF; add( h){var g=new IB<JB>.WE(h,this);if(pF==null)return oF=pF=g;return pF=g.nF(pF,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new JE<JB>(this);}class JE<JB> implements Iterator<JB>{var qF;var kF;var rF;var sF=-1;JE(this.kF){qF=new List<IB>(kF.length);var h=0;var g=kF.head;while (g!=null){qF[h++ ]=g;g=g.next;}} get current=>rF; moveNext(){do{sF++ ;}while(sF<qF.length&&qF[sF].kF!=kF);if(sF<qF.length){rF=qF[sF].value;return true;}else{rF=null;return false;}}}iB(g,h)=>g.hashCode*31+h.hashCode;CD(g,h,i)=>iB(iB(g,h),i);DD(g,h,i,j)=>iB(iB(g,h),iB(i,j)); ED( h()){var g=new RE.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}class NC{static  FD( t, g, CB, i, l){if(g==null)g=0;if(i==null)i=0;if(g<i){for(int h=g+l-1,j=i+l-1;h>=g;h-- ,j-- ){CB[j]=t[h];}}else{for(int h=g,j=i;h<g+l;h++ ,j++ ){CB[j]=t[h];}}}static  GD( j, g, h){if(h<0){throw new ArgumentError("negative length ${h}");}if(g<0){var i="${g} must be greater than or equal to 0";throw new RangeError(i);}if(g+h>j.length){var i="${g} + ${h} must be in the range [0..${j.length})";throw new RangeError(i);}}}abstract class HD extends vB.IterableBase<dynamic>{}abstract class ID extends vB.ListMixin<dynamic>{}var JD=new KE();class KE implements o.NodeTreeSanitizer{ sanitizeTree( g){}} KD(g){if(g is BD)return g.toString();g=g.toString();return MD(g)?g:'#';}const LD=const["http","https","ftp","mailto"]; MD( h){var g=Uri.parse(h).scheme;if(g=='')return true;return LD.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class jB{ oB(){} insert(); remove();}class LE extends jB{final  VC;var tF;final  listener;LE(this.VC,this.listener); insert(){tF=VC.listen(listener);} remove(){tF.cancel();tF=null;}}abstract class ND extends jB{final exp;final  isFinal;final  UC;var uB;ND(this.exp,this.isFinal):UC=zB&&rB!=null?rB():null; insert(){if(isFinal){YC();}else if(uB!=null){throw new StateError('binding already attached');}else{uB=aC();}} remove(){if(!isFinal){uB();uB=null;}} YC(); aC();}class ME extends ND{final  cC;final  ZC;ME( g,this.cC,this.ZC, h):super(g,h); uF(g){cC(ZC?KD(g):g);} YC()=>uF(exp()); aC()=>RD(exp,(g)=>uF(g.newValue),'dom-property-binding',UC);}class NE extends jB{final bB;NE(this.bB); oB(){bB..hD()..created()..gD();} insert(){bB..XC()..jD();} remove(){bB..nD()..bC();}}class OD extends jB{final  mD;final  children=[] ;final  nodes=[] ;OD(this.mD); listen( g, h){children.add(new LE(g,(i){h(i);TD();}));} FB(g,h,i,[j=false]){children.add(new ME(g,h,j,i));} bB( g){children.add(new NE(g));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); oB(){for(var g=0,h=children.length;g<h;g++ ){children[g].oB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}var OC=false;var zB=false;var rB=(){try {throw "";}catch (h,g){return g.toString();}};final  kB=new TB('watcher'); PD(g, t,[ j, CB]){if(OC)return rC(g,t);if(t==null)return (){};if(lB==null)lB=new yB<mB>();j=j==null?'<unnamed>':j;var i;var h=HB.XD;if(g is RC){i=(g as RC).vF;}else if(g is Function){i=g;try {var l=g();if(l is List){h=HB.nB;}else if(l is Iterable){h=HB.nB;i=()=>g().toList();}else if((l is vB.LinkedHashMap)||(l is vB.SplayTreeMap)){h=HB.CC;}else if(l is Map){h=HB.BC;}}catch (SB,dB){kB.GC('evaluating ${j} watcher threw error (${SB}, ${dB})');}}else if(g is List){i=()=>g;h=HB.nB;}else if(g is Iterable){i=()=>g.toList();h=HB.nB;}else if((g is vB.LinkedHashMap)||(g is vB.SplayTreeMap)){i=()=>g;h=HB.CC;}else if(g is Map){i=()=>g;h=HB.BC;}if(zB&&CB==null&&rB!=null){CB=rB();}var HC=QD(h,i,t,j,CB);var dC=lB.add(HC);return dC.remove;} QD( l, g, h, i, j){switch (l){case HB.nB:return new OE(g,h,i,j);case HB.CC:return new QE(g,h,i,j);case HB.BC:return new PE(g,h,i,j);default:return new mB(g,h,i,j);}} RD(h, i,[ j, l]){var t=PD(h,i,j,l);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new pB(null,g));return t;}var lB;class mB{final  debugName;var location;final  wF;static var SD=0;final  vF;final  xF;var yF;mB(this.vF,this.xF,this.debugName,this.location):wF=SD++ {yF=vF();} toString()=>'${debugName} (id: #${wF})'; fD(){var g=zF();if(AG(g)){var h=yF;BG(g);xF(new pB(h,g));return true;}return false;} AG(g)=>yF!=g; BG(g){if(zB){if(location!=null){kB.info('watcher updated: ${this}, defined at:\n${location}');location=null;}else{kB.info('watcher updated: ${this}');}}yF=g;}zF(){try {return vF();}catch (g,h){kB.GC('${this} watcher threw an exception: ${g}, ${h}');}return yF;}}final  PC=10; TD(){if(lB==null)return;var g;var h=0;do{g=false;for(var i in lB){if(i.fD()){g=true;}}}while(g&& ++h<PC);if(h==PC){kB.GC('Possible loop in watchers propagation, stopped dispatch.');}}typedef  QC<UD>();typedef  VD<UD>( value);class RC<UD>{}class OE<UD> extends mB{OE(g, h, i, j):super(g,h,i,j){BG(zF());} AG( g){return AC(yF,g);} BG(g){yF=new List<UD>.from(g);}}class PE<sB,WD> extends mB{PE(g, h, i, j):super(g,h,i,j){BG(zF());} AG( g){var i=yF.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(yF[h]!=g[h])return true;}return false;} BG(g){yF=new Map<sB,WD>.from(g);}}class QE<sB,WD> extends mB{QE(g, h, i, j):super(g,h,i,j){BG(zF());} AG( g){return AC(g.keys,yF.keys)||AC(g.values,yF.values);} BG(g){yF=new vB.LinkedHashMap.from(g);}} AC( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class HB{final CG;const HB.XE(this.CG);toString()=>'Enum.${CG}';static const nB=const HB.XE('LIST');static const BC=const HB.XE('HASH_MAP');static const CC=const HB.XE('ORDERED_MAP');static const XD=const HB.XE('OTHER');}abstract class SC extends hC{var DG;var EG;var FG={};var GG=new FC({}); iD( g)=>GG; qD( h,var g){GG=g;} get host{if(DG==null)throw new StateError('host element has not been set.');return DG;}set host( g){if(g==null){throw new ArgumentError('host must not be null.');}var h=g.xtag;if(h!=null&&h!=g){throw new ArgumentError('host must not have its xtag property set.');}if(DG!=null){throw new StateError('host can only be set once.');}g.xtag=this;DG=g;}createShadowRoot([ g]){var h=HG();if(g!=null){FG[g]=h;}return h;}HG(){if(TC){return host.createShadowRoot();}if(EG==null)EG=[] ;EG.add(new o.DivElement());return EG.last;} created(){} XC(){} bC(){} gD(){if(TC)return;if(EG.length==0){throw new StateError('Distribution algorithm requires at least one shadow' ' root and can only be run once.');}var j=EG;var g=j.removeLast();var CB=g;var l=new List.from(nodes);var t=[] ;var SB=[] ;while (true){l=IG(g,l);var h=g.query('shadow');if(h!=null){if(j.length>0){g=j.removeLast();t.add(h);SB.add(g);}else{EC(h,l);break;}}else{break;}}for(int i=0;i<t.length;i++ ){var h=t[i];var g=SB[i];EC(h,g.nodes);}nodes.clear();nodes.addAll(CB.nodes);for(var dB in FG.keys){if(FG[dB]==CB){FG[dB]=this;break;}}} IG( CB, j){for(var g in CB.queryAll('content')){if(!ZD(g))continue;var h=g.attributes['select'];if(h==null||h=='')h='*';var i=[] ;var l=[] ;for(var t in j){(YD(t,h)?i:l).add(t);}if(i.length==0){i=g.nodes;}EC(g,i);j=l;}return j;}static  YD( g, h){if(g is !o.Element)return h=='*';return (g as o.Element).matches(h);}static  DC( g)=>g.tagName=='CONTENT'||g.tagName=='SHADOW';static  ZD( g){assert(DC(g));for(g=g.parent;g!=null;g=g.parent){if(DC(g))return false;}return true;}static  EC( g, h){assert(DC(g));g.parent.insertAllBefore(h,g);g.remove();}}class FC{final  JG;FC(this.JG); operator[]( g)=>JG[g];}var aD=false; get TC=>aD&&o.ShadowRoot.supported;var bD=o.document.body;
//# sourceMappingURL=slambook.html_bootstrap.dart.map
//@ sourceMappingURL=slambook.html_bootstrap.dart.map
